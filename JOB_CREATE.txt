begin
DBMS_SCHEDULER.CREATE_JOB
(
JOB_NAME=>'DATA_MIGRATION_DB_TO_DB_BTIC',
JOB_TYPE=>'STORED_PROCEDURE',
JOB_ACTION=>'P_EXECUTE_MIGRATION',
START_DATE=>'18/MAY/2023 10:40:00 PM',
REPEAT_INTERVAL=>'FREQ=MINUTELY;INTERVAL=60',
END_DATE=>'18/MAY/2024 08:00:00 PM',
AUTO_DROP=>FALSE,
COMMENTS=>'THIS JOB WILL MIGRATE DB TO DB DATA'
--SOURCE=>'OUR JOB'
);
end;  

BEGIN
  DBMS_SCHEDULER.STOP_JOB(job_name => 'DATA_MIGRATION_DB_TO_DB_BTIC', force => TRUE);
END;

SELECT state,a.* FROM USER_SCHEDULER_JOBS a;
state--running 
BEGIN
DBMS_SCHEDULER.DROP_JOB('DATA_MIGRATION_DB_TO_DB_BTIC');
END;


	

BEGIN
DBMS_SCHEDULER.DISABLE('DATA_MIGRATION_DB_TO_DB_BTIC');
END;


BEGIN
  DBMS_SCHEDULER.DROP_JOB('DATA_MIGRATION_DB_TO_DB_BTIC');
END;

--run job manually-----
BEGIN
DBMS_SCHEDULER.run_job (job_name => 'USERNAME.JOB_NAME');
END;


